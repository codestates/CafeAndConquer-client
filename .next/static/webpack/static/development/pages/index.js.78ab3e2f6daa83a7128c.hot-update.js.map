{"version":3,"file":"static/webpack/static/development/pages/index.js.78ab3e2f6daa83a7128c.hot-update.js","sources":["webpack:///./components/Header.js"],"sourcesContent":["import styled from 'styled-components';\nimport { usePosition } from 'use-position';\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport SignModal from './SignModal';\n\nconst useInput = (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n  const onChange = (event) => {\n    // Destructuring assignment\n    // evnt.target.value\n    const {\n      target: { value },\n    } = event;\n    setValue(value);\n  };\n  return { value, onChange };\n};\n\n\n// 이런 형태로 리펙토링\n// const useSign = () => {\n//   const [show, setShow] = useState(false);\n//   console.log(show);\n//   const showSign = () => {\n//     setShow(!show);\n//   };\n//   return { showSign };\n// };\n\n// 문제2. 현재 위치를 어떻게 넘겨줄 것인가?\nconst searchBtnHandler = (value, current) => {\n  if (value === '') {\n    console.log(current);\n  }\n};\n\nconst Header = () => {\n  let useSearch = useInput('');\n  const { latitude, longitude, error } = usePosition();\n  const position = {\n    lat: latitude,\n    lng: longitude,\n    err: error,\n  };\n  let searchAddress = useSearch.value;\n  if (useSearch.value === '') {\n    searchAddress = '[id]';\n  }\n  const handleKeyPress = (e) => {\n    if (e.charCode === 13) {\n      if (useSearch.value !== '') {\n        Router.push(`/search/${useSearch.value}`);\n      }\n    }\n  };\n\n  const [show, setShow] = useState(false);\n  const showSign = () => {\n    setShow(!show);\n  };\n\n  return (\n    <MainFrame>\n      <Link href=\"/\">\n        <Logo>C&C</Logo>\n      </Link>\n      <SearchFrame>\n        {/* 비구조화 할당 // 노마드코더 */}\n        <Search onKeyPress={handleKeyPress} {...useSearch} />\n        <Link href=\"/search/[id]\" as={`/search/${searchAddress}`}>\n          {/* 위도 정보, 검색  정보  넘기기? */}\n          <Button onClick={() => searchBtnHandler(useSearch.value, position)}>\n            탐색\n          </Button>\n        </Link>\n      </SearchFrame>\n      <TopMenuBtton>\n        {/* 의문1. link를 감싸는 방법을 왜 써야하며 다른 방법은 없는가? */}\n        <button onClick={() => showSign()}>sign</button>\n        <SignModal onClose={showSign} show={show}>\n          환영합니다\n        </SignModal>\n        <Link href=\"/login\">\n          <a style={{ padding: '10px' }}>login</a>\n        </Link>\n      </TopMenuBtton>\n    </MainFrame>\n  );\n};\n\nconst MainFrame = styled.div`\n  position: fixed;\n  height: 100px;\n  max-width: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  background-color: lightgray;\n  z-index: 10;\n  /* border: 1px solid black; */\n`;\n\nconst Logo = styled.a`\n  position: relative;\n  top: 18%;\n  left: 3%;\n  font-family: Monospace, Helvetica, sans-serif;\n  position: absolute;\n  font-size: 3.4rem;\n  text-decoration: none;\n`;\n\nconst SearchFrame = styled.div`\n  position: relative;\n  top: 10%;\n  left: 25%;\n  width: 50%;\n  height: 70px;\n`;\n\nconst Search = styled.input.attrs({\n  placeholder: '지역 또는 카페 탐색하기',\n  type: 'text',\n})`\n  position: relative;\n  top: 20%;\n  width: 70%;\n  padding-left: 45px;\n  height: 44px;\n  border: 0px;\n  border: 3px solid #ff7f00;\n  font-size: 18px;\n  color: #ff7f00;\n  background: url(https://s3-ap-northeast-1.amazonaws.com/dcicons/new/images/web/common/search@2x.png)\n    no-repeat left;\n  background-size: 40px;\n  outline: none;\n\n  &:focus {\n    border-color: blue;\n  }\n`;\n\nconst Button = styled.button.attrs({})`\n  position: relative;\n  top: 15%;\n  width: 40px;\n  height: 50px;\n`;\n\nconst TopMenuBtton = styled.div`\n  position: absolute;\n  top: 35%;\n  left: 70%;\n  height: 30px;\n  width: 25%;\n  /* border: 1px solid black; */\n  text-align: center;\n`;\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AACA;AAouBA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAUA;;;;A","sourceRoot":""}